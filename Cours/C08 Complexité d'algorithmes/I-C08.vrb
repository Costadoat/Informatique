\frametitle{Les types de complexités}

Par ordre de complexité croissante on a donc :
\begin{itemize}
 \item $O(1)$: algorithme s'exécutant en temps constant, quelle que soit la taille des données,
 \item $O(log(n))$: algorithme rapide (complexité logarithmique), (Exemple : recherche par dichotomie dans un
tableau trié),
 \item $O(n)$: algorithme linéaire,
 \item $O(n.log(n))$: complexité n.log(n),
 \item $O(n^2)$: complexité quadratique,
 \item $O(2^n)$: complexité exponentielle.
\end{itemize}
