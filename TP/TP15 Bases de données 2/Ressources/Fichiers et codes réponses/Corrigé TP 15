***********
I.1.4 
***********

SELECT COUNT(*) FROM cafes WHERE codepostal=75011

***********
I.1.5 
***********

SELECT nom, adresse, codepostal, (48.854563-latitude)*(48.854563-latitude)+(2.392678-longitude)*(2.392678-longitude) AS distance
FROM cafes ORDER BY distance

ou 

SELECT nom, adresse, codepostal, min((48.854563-latitude)*(48.854563-latitude)+(2.392678-longitude)*(2.392678-longitude))
FROM cafes

***********
II.3
***********

SELECT annee, SUM(nombre) AS somme FROM prenoms WHERE prenom="Juliette" GROUP BY annee ORDER BY annee

***********
II.5
***********

SELECT annee, COUNT(DISTINCT prenom) FROM prenoms GROUP BY annee

***********
II.6 (a) Quels prénoms ont été donnés exactement 100 fois sur au moins une année ?
***********

SELECT prenom FROM prenoms WHERE nombre=100

***********
II.6 (b) Quels prénoms ont été donnés exactement 100 fois sur la période complète ?
***********

SELECT prenom, SUM(nombre) FROM prenoms GROUP BY prenom HAVING SUM(nombre)=100

***********
II.7 (a)
***********

SELECT P.annee, P.prenom, P.nombre from prenoms P
JOIN (SELECT MAX(nombre) as max, annee FROM prenoms GROUP BY annee) liste_max 
ON liste_max.annee=P.annee
WHERE liste_max.max=P.nombre
ORDER BY P.annee;

***********
II.7 (b)
***********

SELECT P.annee, P.prenom, P.nombre, P.sexe from prenoms P
JOIN (select MAX(nombre) as max, annee FROM prenoms WHERE sexe='F' GROUP BY annee) liste_max 
ON liste_max.annee=P.annee
WHERE liste_max.max=P.nombre AND P.sexe='F'
ORDER BY P.annee;

***********
II.7 (c)
***********

SELECT prenom, somme
FROM (SELECT prenom, SUM(nombre) AS somme FROM prenoms GROUP BY prenom) liste_somme
WHERE liste_somme.somme = (SELECT MAX(somme) FROM (SELECT prenom, SUM(nombre) AS somme FROM prenoms GROUP BY prenom) liste_somme)

La requête se lit de droite à gauche et de bas en haut :
* on groupe par prénom les données de la table « prenoms » et on calcule le nombre de fois (SUM(nombre) AS somme) que chaque prénom a été donné sur toute la période en lui associant le prénom ; cela crée une table qu'on nomme liste_somme 
* on se sert de cette table liste_somme pour déterminer le nombre de fois que le prénom le plus donné a été donné (MAX(somme))
* on se sert de ce maximum pour sélectionner la ligne de la table liste_somme qui contient le prénom le plus donnée et le nombre de fois qu'il a été donné
* on sélectionne ensuite le prénom qui a été donné le plus de fois en lui associant ce nombre 

En français, la requête répond à la question : « Quel est le prénom qui a été le plus donné sur l'ensemble de la période (on donnera aussi le nombre de fois qu'il a été donné) ? »


***********
III.3.5 
***********

SELECT semaine, note FROM eleves JOIN colles ON ide=eleve WHERE nom="Lions" AND prenom="Jacques-Louis" ORDER BY semaine

***********
III.3.6 
***********

SELECT semaine, profs.nom, note FROM  eleves JOIN colles JOIN profs ON ide=eleve AND prof=idp WHERE eleves.nom="Lions" AND eleves.prenom="Jacques-Louis" ORDER BY semaine

***********
III.3.7 
***********

SELECT eleves.nom, semaine, profs.nom, note FROM  eleves JOIN colles JOIN profs ON ide=eleve AND prof=idp WHERE note>=19 ORDER BY semaine

***********
III.4.8
***********

SELECT AVG(note) FROM  eleves JOIN colles ON ide=eleve WHERE nom="Lions" AND prenom="Jacques-Louis"

***********
III.4.9
***********

SELECT eleves.nom, AVG(note) FROM eleves JOIN colles ON ide=eleve GROUP BY eleves.nom






***********
III.4.10
***********

SELECT eleves.nom, COUNT(*) AS nombre_de_plantages FROM eleves JOIN colles ON ide=eleve WHERE note < 10 GROUP BY eleves.nom HAVING nombre_de_plantages > 10

La requête se lit de droite à gauche et de haut en bas :
* on ne garde que les résultats correspondant à un nombre de plantages strictement supérieur à 10 dans la table formée par la restriction aux notes inférieures strictement à 10 de la jointure des tables « eleves » et « colles » sur le critère identifiant l'élève 
* on sélectionne ensuite le prénom de l'élève en lui associant son nombre de plantages
En français, la requête répond à la question : « Quels sont les noms des élèves ayant eu au moins 10 notes strictement inférieures à 10 sur 20 »

***********
III.4.11
***********

SELECT eleves.nom, COUNT(*) AS bravo FROM eleves JOIN colles ON ide=eleve WHERE note > 18 GROUP BY eleves.nom HAVING bravo > 6

***********
III.4.12 
***********

par tri

SELECT profs.nom, AVG(note) FROM profs JOIN colles ON idp=prof GROUP BY profs.nom ORDER BY AVG(note) DESC

ou par sélection du maximum des moyennes (nécessite deux requêtes)

SELECT nom_prof, MAX(moyenne_prof) FROM (
SELECT profs.nom AS nom_prof, AVG(note) AS moyenne_prof FROM profs JOIN colles ON idp=prof GROUP BY profs.nom
)

***********
III.4.13 (a)
***********

SELECT profs.nom, AVG(note) AS moyenne, SUM(note*note)/COUNT(note)-AVG(note)*AVG(note) AS variance FROM profs JOIN colles ON idp=prof GROUP BY profs.nom

***********
III.4.13 (b)
***********

par tri

SELECT profs.nom, AVG(note) AS moyenne, SUM(note*note)/COUNT(note)-AVG(note)*AVG(note) AS variance FROM profs JOIN colles ON idp=prof GROUP BY profs.nom ORDER BY variance DESC

ou par sélection du maximum des moyennes (nécessite deux requêtes)

SELECT nom_prof, MIN(variance) FROM (
SELECT profs.nom AS nom_prof, AVG(note) AS moyenne, SUM(note*note)/COUNT(note)-AVG(note)*AVG(note) AS variance FROM profs JOIN colles ON idp=prof GROUP BY profs.nom ORDER BY variance DESC
)

***********
III.4.14 

« En trichant »

SELECT AVG(note) FROM colles

« Sans tricher » (nécessite deux requêtes)

SELECT AVG(moyenne_eleve) AS moyenne_classe FROM (

SELECT AVG(note) AS moyenne_eleve FROM eleves JOIN colles ON ide=eleve GROUP BY eleve

)
